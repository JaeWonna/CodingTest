from collections import deque

INF = int(1e9)
n,m,k,x = map(int, input().split())
graph = [[] for _ in range(n+1)]
distance = [INF]*(n+1)
visited = [False]*(n+1)

for i in range(m):
    a,b = map(int, input().split())
    graph[a].append(b)

def solution():
    queue = deque()
    queue.append(x)
    distance[x] = 0
    visited[x] = True
    result = []

    while queue:
        v = queue.popleft()

        for i in graph[v]:
            distance[i] = min(distance[i], distance[v]+1)
            if not visited[i]:
                queue.append(i)
                visited[i] = True
    
    for i in range(1,n+1):
        if distance[i] == k:
            result.append(i)
    
    if len(result) == 0:
        print(-1)
    else:
        for i in range(len(result)):
            print(result[i])

solution()
